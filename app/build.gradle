plugins {
    alias(libs.plugins.androidLibrary)
    alias(libs.plugins.jetbrainsKotlinAndroid)
    id("maven-publish")
}

android {
    namespace 'io.github.pksokolowski.flow_utils_2'
    compileSdk 34

    defaultConfig {
        minSdk 23
        targetSdk 33
        versionCode 2
        versionName "0.0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.coroutines
    implementation libs.lifecycle

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'io.github.pksokolowski'
            artifactId = 'flow_utils_2'
            version = '0.0.2'

            pom {
                name = 'Flow utils 2'
                description = 'Utils for Coroutine Flows, meant for Android projects'
                url = 'https://github.com/pksokolowski/Flow-utils-2'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'sokol'
                        name = 'Paweł Sokołowski'
                        email = 'p.k.sokolowski@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:pksokolowski/Flow-utils-2.git'
                    developerConnection = 'scm:git@github.com:pksokolowski/Flow-utils-2.git'
                    url = 'https://github.com/pksokolowski/Flow-utils-2'
                }
            }

            afterEvaluate {
                from components.release
            }
        }
    }
    repositories {
        maven {
            name = 'myrepo'
            url = "${project.buildDir}/repo"
        }
    }
}

tasks.register('generateRepo', Zip) {
    def publishTask = tasks.named('publishReleasePublicationToMyrepoRepository')
    from publishTask.map { it.getRepository().getUrl() }
    into 'mylibrary'
    archiveFileName.set('mylibrary.zip')
}